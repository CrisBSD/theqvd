#!/bin/sh
# postinst script for qvd-db
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
    if su postgres -c "createuser -SDRl qvd" > /dev/null; then
	# set a temporary password for installation
	# and deploy the database schema as qvd
	PASSWORD="tmp$RANDOM"
	sudo -u postgres psql -c "ALTER ROLE qvd PASSWORD '$PASSWORD';"
	echo "PostgreSQL user 'qvd' added"
	if su postgres -c "createdb -O qvd qvd" > /dev/null; then
	    echo "PostgreSQL database 'qvd' added"
	    # Default configuration of PostgreSQL allows 
	    # md5-authentication from 127.0.0.1
	    /usr/bin/qvd-deploy-db.pl 'dbi:Pg:dbname=qvd;host=127.0.0.1' qvd "$PASSWORD"
	    echo "QVD schema deployed"
	else
	    echo "ERROR: PostgreSQL database 'qvd' already exists"
	    echo "Remove it or install the QVD database manually."
	    exit 1
	fi
    else
	echo "ERROR: PostgreSQL user 'qvd' already exists"
	echo "Remove it or install the QVD database manually."
	exit 1
    fi

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
