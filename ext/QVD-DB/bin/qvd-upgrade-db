#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Long;
use QVD::DB::Upgrade;

my $version;
my $downgrade;
my $i_am_brave;

GetOptions("to-version|t=s" => \$version,
           "downgrade|d"    => \$downgrade,
           "i-am-brave"     => \$i_am_brave);

$i_am_brave or die <<EOM;
Are you sure you want to upgrade the QVD database?

This is a potentially dangerous operation that may cause your running
systems to malfunction.

To circunvent this safety measure, you have to use the --i-am-brave flag.

EOM

die "Target version argument is mandatory when downgrading\n"
    if $downgrade and not defined $version;

qvd_db_upgrade($version, $downgrade);

__END__

=head1 SYNOPSIS

qvd-upgrade-db [--to-version=$version] [--downgrade] --i-am-brave

=head1 DESCRIPTION

When the QVD software is upgraded to a newer version it may be
necesarry to perform some changes on the database schema in order to
support new features.

This program performs such changes automatically.

=head1 COMMON OPTIONS

=over

=item --to-version

Target version, defaults to the latest one.

=item --downgrade

In case you want to downgrade to a previous version.

=item --i-am-brave

This magic flag is always required. Just to ensure you really want to
upgrade/downgrade the database schema.

=back

=head1 COPYRIGHT

Copyright 2009-2013 by Qindel Formacion y Servicios S.L.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU GPL version 3 as published by the Free
Software Foundation.

