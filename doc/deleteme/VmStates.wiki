
= Estados, comandos y transiciones del HKD relativos a la máquina virtual =

[[PageOutline]]

En este documento se describen los estados, comandos y transiciones que afectan al HKD desde el punto de vista de la VM.

Para una introducción de los términos empleados véase el documento [EstadosTransiciones Estados de la plataforma].


== Resumen ==

[[Image(HKD-VM-states.png)]]

(negro = flujo normal, naranja = flujos causados por errores y otros eventos no esperados, rojo = transiciones que activan el flag blocked)

=== Estados (vm_runtimes.vm_state) ===

 * '''Stopped''': la máquina virtual no está corriendo en ningún host.

 * '''Starting''': la máquina virtual ha sido iniciada en un host pero todavía no ha finalizado la secuencia de arranque.

 * '''Running''': la máquina virtual está corriendo.

 * '''Stopping 1''': el HKD ha recibido el comando '''stop''' pero el mismo todavia no ha sido reenviado con éxito al VMA de dicha maquina

 * '''Stopping 2''': el comando '''stop''' ha sido enviado con éxito al VMA 

 * '''Zombie 1''': la máquina virtual está corriendo pero no responde, se le envían señales TERM

 * '''Zombie 2''': la máquina virtual esta corriendo pero no responde, se le envían señales KILL


=== Comandos (vm_runtimes.vm_cmd) ===

Las comandos (desencadenados por eventos) son las instrucciones que entiende el HKD y que le llegan a través de la base de datos

 * '''start''': inicia la máquina virtual (valid_from: Stopped; to: Starting)

 * '''stop''': para la máquina virtual (valid_from: Running, delayed_from: Starting; ignored_from: Stopping*, Zombie*, Stopped).

== Descripción detallada de estados, comandos y transiciones ==

=== Stopped ===

La máquina virtual no está corriendo en ningún host.

Este es un estado estable y por lo tanto no se realiza ninguna acción por timeout.

==== Comandos aceptados ====

===== Start =====

Cuando se recibe este comando, el HKD del host correspondiente (según vm_runtime.host) lanzará la máquina virtual y cambiará el estado a '''Starting'''.

Nota: es imprescindible que antes de lanzar este comando se haga la asignación de la VM a un host específico.

==== Acciones de entrada ====

Siempre que se entre en este estado desde cualquier otro...

 * se desasigna la VM del host borrando la entrada vm_runtime.host de la base de datos

 * se limpian los campos vm_vma_port, vm_x_port, vm_vnc_port, vm_ssh_port, vm_serial_port, vm_mon_port, vm_address y vma_ok_ts de la tabla vm_runtimes

En caso de llegar a este estado por un fallo se pone a 1 el flag blocked (aunque esto se implementa en las transiciones que dan lugar al cambio de estado).

=== Starting ===

La máquina virtual está corriendo pero aún no se tiene acceso al VMA

La máquina se monitoriza continuamente hasta que responda el VMA, momento en el cual se pasa al estado '''Running'''.

Si se supera un timeout predefinido (internal.hkd.timeout.vm.state.starting) sin haberse recibido respuesta del VMA, la máquina pasa al estado '''Zombie 1'''.

Si el proceso de KVM muere, se pasa al estado '''Stopped''' poniendo a 1 el flag blocked.


==== Comandos aceptados ====

Se acepta el comando '''stop''' como "delayed".

=== Running ===

La máquina virtual está corriendo.

Se monitoriza continuamente el VMA, manteniéndose actualizado el campo vm_runtimes.vm_ok_ts de la base de datos.

Si se sobrepasa un timeout predefinido (internal.hkd.timeout.vm.state.running), sin que el VMA responda, la máquina pasa al estado '''Zombie 1'''. Este timeout se reinicializa cada vez que hay una respuesta del VMA.

Si el proceso de KVM muere, se pasa al estado '''Stopped''' poniendo a 1 el flag blocked.


==== Comandos aceptados ====

===== Stop =====

Se pasa al estado '''Stopping 1'''.


=== Stopping 1 ===

En este estado se intenta reenviar la orden de parada al VMA repetidamente.

Cuando se consigue entregar con exito la orden de parada al VMA se pasa al estado '''Stopping 2'''

Si se sobrepasa un timeout predefinido (internal.hkd.timeout.vm.state.stopping_1) sin que se realice la entrega de la orden con exito se pasa al estado '''Zombie 1'''.

Si el proceso de KVM muere, se pasa al estado '''Stopped''' sin activar el flag blocked (dado que aunque no sea el flujo normal, es posible que en una comunicación parcial con el VMA realizada con anterioridad se hubiese llegado a hacer la entrega de la orden de parada).

==== Comandos aceptados ====

Ninguno

==== Acciones de entrada ====

Siempre que se pase a este estado desde cualquier otro...

 * se envia el comando '''abort''' al L7R en caso de que el estado del usuario (vm_runtimes.user_state) sea '''Connecting'''

=== Stopping 2 ===

En este estado no se hace nada más que esperar a que la maquina virtual se apague.

Si se sobrepasa un timeout predefinido (internal.hkd.timeout.vm.state.stopping_2) sin que el proceso finalice se pasa al estado '''Zombie 1'''.

Si el proceso de KVM muere, se pasa al estado '''Stopped'''.

==== Comandos aceptados ====

Ninguno

=== Zombie 1 ===

En este estado se envian señales TERM al proceso de KVM reiteradamente.

Si el proceso de KVM termina, se pasa al estado '''Stopped''' y se pone el flag 'blocked' a 1.

Sobrepasado un timeout predeterminado (internal.hkd.timeout.vm.state.zombie_1) sin que el proceso de KVM termine se pasa al estado '''Zombie 2'''

==== Comandos aceptados ====

Ninguno

==== Acciones de entrada ====

Siempre que se pase a este estado desde cualquier otro...

 * se envia el comando '''abort''' al L7R en caso de que el estado del usuario (vm_runtimes.user_state) sea '''Connecting'''

=== Zombie 2 ===

En este estado se envian señales KILL al proceso de KVM reiteradamente.

Si el proceso de KVM termina, se pasa al estado '''Stopped''' y se pone el flag 'blocked' a 1.