You are able to specify the following additional options to control
the VMA (Virtual Machine Agent) running within a Virtual Machine:

----
# vma.audio.enable = 0
# vma.printing.enable = 0
# vma.pid_file = /var/run/qvd/vma.pid
# vma.user.home.drive = /dev/vdb
# vma.user.home.fs = ext4
# vma.user.home.path = /home
# vma.user.default.name = qvd
# vma.user.default.groups =
# vma.on_action.pre-connect =
# vma.on_action.connect =
# vma.on_action.stop =
# vma.on_action.disconnect =
# vma.on_action.suspend =
# vma.on_action.poweroff =
# vma.on_state.connected =
# vma.on_state.suspended =
# vma.on_state.disconnected =
# vma.on_provisioning.mount_home =
# vma.on_provisioning.add_user =
# vma.on_provisioning.after_add_user =
----

The values set above are the default values. Note that they need to be
specified within the /etc/qvd/vma.conf file within the disk image.

* *vma.audio.enable*: whether to enable audio sharing using PulseAudio via the nxagent (1=enabled) 
* *vma.printing.enable*: whether to enable printer sharing via the nxagent (1=enabled)
* *vma.pid_file*: path to the VMA PID file
* *vma.user.home.drive*: the device that contains home directories (e.g. /dev/vdb)
* *vma.user.home.fs*: the filesystem that should be used when autoprovisioning homes (e.g. ext4)
* *vma.user.home.path*: the path where the virtual home device will be mounted to
* *vma.user.default.name*: the default username for the vma user
* *vma.user.default.groups*: the groups that the vma user belongs to
* *vma.on_action.pre-connect*: when a client has initiated a connection but it has not been established
* *vma.on_action.connect*: when the client establishes the connection
* *vma.on_action.stop*: when the VM has been stopped, this executable will be run first
* *vma.on_action.disconnect*: when a client has disconnected from the VM
* *vma.on_action.suspend*: when the VM has been told to suspend
* *vma.on_action.poweroff*: when the VM has been told to shutdown or poweroff
* *vma.on_state.connected*: executable to be run just before a client is connected to the VM
* *vma.on_state.suspended*: executable to be run when a client's connection to the VM is suspended
* *vma.on_state.disconnected*: executable to be run when a client is disconnected from the VM
* *vma.on_provisioning.mount_home*: executable to be run when the user's home directory is mounted
* *vma.on_provisioning.add_user*: executable to be run before the user is added to the VM instance
* *vma.on_provisioning.after_add_user*: executable to be run after the user has been added to the VM

